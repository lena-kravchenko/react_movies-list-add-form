{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleSubmit","addMovie","props","setState","handleChange","event","target","name","value","onSubmit","preventDefault","type","placeholder","this","onChange","required","ImgUrl","handleChang","ImdbUrl","ImdbId","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCtBGK,G,MAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEG,aAAe,YAGbC,EAFqB,EAAKC,MAAlBD,UAEC,EAAKF,OAEd,EAAKI,SAAS,CACZpB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MAnBd,EAuBEO,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,EAAKL,SAAL,eACGI,EAAOC,KA3Bd,4CA+BE,WAAU,IAAD,OACP,OACE,0BACErB,UAAU,OACVsB,SAAU,SAACJ,GACTA,EAAMK,iBACN,EAAKV,iBAGP,2BACEb,UAAU,QACVwB,KAAK,OACLC,YAAY,QACZJ,MAAOK,KAAKd,MAAMhB,MAClBwB,KAAK,QACLO,SAAUD,KAAKT,aACfW,UAAQ,IAEV,2BACE5B,UAAU,QACVwB,KAAK,WACLC,YAAY,cACZJ,MAAOK,KAAKd,MAAMf,YAClBuB,KAAK,cACLO,SAAUD,KAAKT,eAEjB,2BACEjB,UAAU,QACVwB,KAAK,OACLC,YAAY,SACZJ,MAAOK,KAAKd,MAAMiB,OAClBT,KAAK,SACLO,SAAUD,KAAKI,YACfF,UAAQ,IAEV,2BACE5B,UAAU,QACVwB,KAAK,OACLC,YAAY,UACZJ,MAAOK,KAAKd,MAAMmB,QAClBX,KAAK,UACLO,SAAUD,KAAKT,aACfW,UAAQ,IAEV,2BACE5B,UAAU,QACVwB,KAAK,OACLC,YAAY,SACZJ,MAAOK,KAAKd,MAAMoB,OAClBZ,KAAK,SACLO,SAAUD,KAAKT,aACfW,UAAQ,IAEV,4BACE5B,UAAU,SACVwB,KAAK,UAFP,kBApFR,GAA8BS,c,OCEjBC,EAAb,4MACEtB,MAAQ,CACNN,OAAQ6B,GAFZ,EAKErB,SAAW,SAACN,GACV,EAAKQ,UAAS,SAAAoB,GAAS,MAAK,CAC1B9B,OAAO,GAAD,mBACD8B,EAAU9B,QADT,CAEJE,SATR,4CAcE,WAAU,IACAF,EAAWoB,KAAKd,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEM,OAAQA,KAGZ,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEc,SAAUY,KAAKZ,iBA1B3B,GAAyBmB,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b04ebbb5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleSubmit = () => {\n    const { addMovie } = this.props;\n\n    addMovie(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.handleSubmit();\n        }}\n      >\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Title\"\n          value={this.state.title}\n          name=\"title\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          className=\"input\"\n          type=\"textarea\"\n          placeholder=\"Description\"\n          value={this.state.description}\n          name=\"description\"\n          onChange={this.handleChange}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"ImgUrl\"\n          value={this.state.ImgUrl}\n          name=\"imgUrl\"\n          onChange={this.handleChang}\n          required\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"ImdbUrl\"\n          value={this.state.ImdbUrl}\n          name=\"imdbUrl\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"ImdbId\"\n          value={this.state.ImdbId}\n          name=\"imdbId\"\n          onChange={this.handleChange}\n          required\n        />\n        <button\n          className=\"button\"\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList\n            movies={movies}\n          />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}